(module
  (type $s (struct (field i32) (field i32)))
  (type $f0 (func (param i32)))
  (type $c0 (cont $f0))
  (type $f1 (func))
  (type $c1 (cont $f1))

  (tag $a)
  (tag $b)

  (func $func_b (param i32)
    (if (i32.eqz (local.get 0))
      (then (suspend $a))
      (else (suspend $b))
    )
  )
  (elem declare func $func_b)

  (func $func_a (param i32)
    (resume $c0 (local.get 0) (cont.new $c0 (ref.func $func_b)))
  )
  (elem declare func $func_a)

  (func (export "main") (param i32) (result i32)
    (block $jump_a (result (ref null $c1))
      (block $jump_b (result (ref null $c1))
        (resume $c0 (on $a $jump_a) (on $b $jump_b)
          (local.get 0)
          (cont.new $c0 (ref.func $func_a))
        )
        (ref.null $c1)
      )
      (return (i32.const 1))
    )
    (return (i32.const 0))
  )
)

(assert_return (invoke "main" (i32.const 0)) (i32.const 0))
(assert_return (invoke "main" (i32.const 1)) (i32.const 1))
