(module
  (type $f1 (func (param i32)))
  (type $f2 (func))
  (type $c1 (cont $f1))
  (type $c2 (cont $f2))
  (tag $ts (param i32))
  (func $foo (param i32)
    (if (i32.eqz (local.get 0))
      (then
        (suspend $ts (i32.const 0))
      )
      (else
        (block (result i32 (ref null $c2))
          (resume $c1 (on $ts 0)
            (i32.sub (local.get 0) (i32.const 1))
            (cont.new $c1 (ref.func $foo))
          )
          (i32.const -1)
          (ref.null $c2)
        )
        (drop)
        (i32.add (i32.const 1))
        (suspend $ts)
      )
    )
  )
  (elem declare func $foo)
  (func (export "main") (param i32) (result i32)
    (block (result i32 (ref null $c2))
      (resume $c1 (on $ts 0) (local.get 0) (cont.new $c1 (ref.func $foo)))
      (i32.const -1)
      (ref.null $c2)
    )
    (drop)
  )
)

(assert_return (invoke "main" (i32.const 0)) (i32.const 0))
(assert_return (invoke "main" (i32.const 2)) (i32.const 2))
(assert_return (invoke "main" (i32.const 5)) (i32.const 5))
(assert_return (invoke "main" (i32.const 10)) (i32.const 10))
(assert_return (invoke "main" (i32.const 42)) (i32.const 42))
(assert_return (invoke "main" (i32.const 128)) (i32.const 128))
